version: "3.6"

volumes:
  mysql_data:
  mongo_data:
  pg_data:

networks:
  app-network:

services:
  mysql:
    container_name: docker-service-mysql
    image: mysql:5.7
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_general_ci",
      ]
    env_file: ./.env
    # environment:
    #   MYSQL_USER: ${MYSQL_USER}
    #   MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    #   MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    #   MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_PASSWORD}"]
      timeout: 20s
      retries: 10
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  phpmyadmin:
    container_name: docker-service-phpmyadmin
    image: phpmyadmin:5.1.0
    env_file: ./.env
    # environment:
    #   PMA_HOST: mysql
    #   PMA_PORT: 3306
    #   PMA_USER: ${MYSQL_USER}
    #   PMA_PASSWORD: ${MYSQL_PASSWORD}
    #   UPLOAD_LIMIT: 20000000
    ports:
      - "8282:80"
    networks:
      - app-network
    depends_on:
      - mysql

  mongo:
    container_name: docker-service-mongo
    image: mongo:7.0.2
    restart: always
    env_file: ./.env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    ports:
      - 27017:27017
    volumes:
      - ./dockerfiles/mongo/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - mongo_data:/data/db
    # command:
    #   - /bin/sh /docker-entrypoint-initdb.d/init-mongo.sh

  postgres:
    image: postgres:latest
    container_name: my-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always
